cmake_minimum_required(VERSION 3.16)

project(Jump-and-Run VERSION 0.1 LANGUAGES CXX)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(Qt6 REQUIRED COMPONENTS Widgets)

set(CMAKE_PREFIX_PATH "/Users/moritzgruber/Qt/6.9.0/macos")

set(PROJECT_SOURCES
        main.cpp
)

qt_add_executable(Jump-and-Run
  MANUAL_FINALIZATION
  ${PROJECT_SOURCES}
  gamewindow.h
  gamewindow.cpp
  obstacle.h obstacle.cpp
  resources.qrc
  mainmenu.h mainmenu.cpp
  scorewindow.h scorewindow.cpp
)

target_link_libraries(Jump-and-Run PRIVATE Qt${QT_VERSION_MAJOR}::Widgets)

# Qt for iOS sets MACOSX_BUNDLE_GUI_IDENTIFIER automatically since Qt 6.1.
# If you are developing for iOS or macOS you should consider setting an
# explicit, fixed bundle identifier manually though.
set(BUNDLE_ID_OPTION MACOSX_BUNDLE_GUI_IDENTIFIER com.example.Jump-and-Run)
set_target_properties(Jump-and-Run PROPERTIES
    ${BUNDLE_ID_OPTION}
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

include(GNUInstallDirs)
install(TARGETS Jump-and-Run
    BUNDLE DESTINATION .
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

qt_finalize_executable(Jump-and-Run)
